version: '3.8'
services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  bot:
    build: .
    env_file:
      - .env
    environment:
      - LIVE_MODE=false
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 5

  dashboard:
    image: node:20-slim
    working_dir: /app
    volumes:
      - .:/app
    command: ['pnpm', 'run', 'dashboard']
    env_file:
      - .env
    ports:
      - '3000:3000'
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 5

  alerts:
    image: node:20-slim
    working_dir: /app
    volumes:
      - .:/app
    command: ['pnpm', 'run', 'alerts']
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 5
# All services use Redis pub/sub for event distribution.
# Healthchecks and restart:always ensure high-availability.
